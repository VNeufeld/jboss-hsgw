<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<!-- Mit XMLSpy v2007 sp2 (http://www.altova.com) von BPCS GmbH (BPCS GmbH) bearbeitet -->
<!-- Mit XMLSpy v2007 sp2 (http://www.altova.com) von XMLSpy 2007 Professional Ed., Installed for 2 users (with SMP from 2006-12-12 to 2007-12-13) (BPCS GmbH) bearbeitet -->
<!-- edited with XMLSpy v2005 sp2 U (http://www.altova.com) by Stefan Holling (BPCS Consulting Services GmbH) -->
<!--W3C Schema generated by XMLSpy v2005 sp2 U (http://www.altova.com)-->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified">
	<xs:element name="RequestorRequest">
		<xs:annotation>
			<xs:documentation>Enveloping tag</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="RequestorName"/>
				<xs:element ref="RequestorRequestContent"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="Request">
		<xs:annotation>
			<xs:documentation>Enveloping tag</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="CalledFrom"/>
				<xs:element ref="DemandedObjects"/>
				<xs:element ref="Administration"/>
				<xs:element ref="Customer"/>
				<xs:element ref="Travel"/>
				<xs:element ref="Car"/>
				<xs:element ref="Insurance" minOccurs="0"/>
				<xs:element ref="Extras" minOccurs="0"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="RequestorName">
		<xs:annotation>
			<xs:documentation>Must be XML</xs:documentation>
		</xs:annotation>
		<xs:complexType mixed="true">
			<xs:attribute name="sessionId" type="xs:string" use="required"/>
		</xs:complexType>
	</xs:element>
	<xs:element name="RequestorRequestContent">
		<xs:annotation>
			<xs:documentation>Enveloping tag</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="Request"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="Active">
		<xs:annotation>
			<xs:documentation>Must always be 1 for credit card payment</xs:documentation>
		</xs:annotation>
		<xs:simpleType>
			<xs:restriction base="xs:string">
				<xs:enumeration value="1"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	<xs:element name="SalutationId" nillable="true">
		<xs:annotation>
			<xs:documentation>The salutation. 1 = misses, 2 = mister</xs:documentation>
		</xs:annotation>
		<xs:simpleType>
			<xs:restriction base="xs:string">
				<xs:pattern value="/d+"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	<xs:element name="Administration">
		<xs:annotation>
			<xs:documentation>Contains administration related data</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="UserType"/>
				<xs:element ref="LanguageId"/>
				<xs:element ref="OperatorId"/>
				<xs:element name="Broker" type="xs:int"/>
				<xs:element ref="BrokerId"/>
				<xs:element ref="BrokerNo" minOccurs="0"/>
				<xs:element ref="BrokerSubExtRef" minOccurs="0"/>
				<xs:sequence minOccurs="0">
					<xs:element ref="AgencyId"/>
					<xs:element ref="MarkUpRel" minOccurs="0"/>
				</xs:sequence>
				<xs:element ref="OutputConfiguration" minOccurs="0"/>
				<xs:element ref="Provider" minOccurs="0">
					<xs:annotation>
						<xs:documentation>Provider wird an TDVA weitergereicht CRS-Funktion
						</xs:documentation>
					</xs:annotation>
				</xs:element>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="Provider" type="xs:string">
		<xs:annotation>
			<xs:documentation>A broker id</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="BrokerId" type="xs:long">
		<xs:annotation>
			<xs:documentation>A broker id</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="BrokerNo" type="xs:string">
		<xs:annotation>
			<xs:documentation>the broker no (mandatory if Broker=1) A1000000 reservation is only displayed if made by this broker</xs:documentation>
		</xs:annotation>
	</xs:element>
	
	<xs:element name="AgencyId" type="xs:long">
		<xs:annotation>
			<xs:documentation>A agency id</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="MarkUpRel" type="xs:string">
		<xs:annotation>
			<xs:documentation>A agency markup</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="Amount" type="xs:short">
		<xs:annotation>
			<xs:documentation>The amount</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="CVC">
		<xs:annotation>
			<xs:documentation>The CVC of the credits card</xs:documentation>
		</xs:annotation>
		<xs:simpleType>
			<xs:restriction base="xs:string">
				<xs:pattern value="\d{3,4}"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	<xs:element name="CalledFrom" type="xs:short">
		<xs:annotation>
			<xs:documentation>identifies the callers environment</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="Car">
		<xs:annotation>
			<xs:documentation>Contains Car related data</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:all>
				<xs:element ref="GroupId"/>
				<xs:element ref="GroupName" minOccurs="0"/>
				<xs:element ref="Producer" minOccurs="0"/>
				<xs:element ref="Type" minOccurs="0"/>
				<xs:element ref="Price" minOccurs="0"/>
				<xs:element ref="Status" minOccurs="0"/>
			</xs:all>
		</xs:complexType>
	</xs:element>
	<xs:element name="City" type="xs:string">
		<xs:annotation>
			<xs:documentation>A city name</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="CityId" type="xs:long">
		<xs:annotation>
			<xs:documentation>A city id</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="Code" type="xs:string">
		<xs:annotation>
			<xs:documentation>A code</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="CountryId" type="xs:long">
		<xs:annotation>
			<xs:documentation>A country id</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="CreditCard">
		<xs:annotation>
			<xs:documentation>Contains credit card related data</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="Id"/>
				<xs:element ref="Number"/>
				<xs:element ref="ValidUntil"/>
				<xs:element ref="CVC"/>
				<xs:element ref="Holder"/>
				<xs:element ref="Active"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="BonusCard">
		<xs:annotation>
			<xs:documentation>Contains bonus card related data</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="Id"/>
				<xs:element ref="Number"/>
				<xs:element ref="Holder">
					<xs:annotation>
						<xs:documentation>The bonus card holder</xs:documentation>
					</xs:annotation>
				</xs:element>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="Currency">
		<xs:annotation>
			<xs:documentation>3 letter ISO code</xs:documentation>
		</xs:annotation>
		<xs:simpleType>
			<xs:restriction base="xs:string">
				<xs:pattern value="[A-Z]{3}"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	<xs:element name="CurrencyId" type="xs:long">
		<xs:annotation>
			<xs:documentation>A currency id</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="Customer">
		<xs:annotation>
			<xs:documentation>Contains customer related data</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:all>
				<xs:element ref="LogIn" minOccurs="0"/>
				<xs:element ref="PartnerNo"/>
				<xs:element ref="CustomerNo"/>
				<xs:element ref="CustomerType"/>
				<xs:element ref="Password" minOccurs="0"/>
				<xs:element ref="SalutationId" minOccurs="0"/>
				<xs:element ref="Name" minOccurs="0"/>
				<xs:element ref="FirstName" minOccurs="0"/>
				<xs:element ref="Street" minOccurs="0"/>
				<xs:element ref="ZipCode" minOccurs="0"/>
				<xs:element ref="City" minOccurs="0"/>
				<xs:element ref="CountryId" minOccurs="0"/>
				<xs:element ref="PhoneCountry" minOccurs="0"/>
				<xs:element ref="PhoneArea" minOccurs="0"/>
				<xs:element ref="PhoneExt" minOccurs="0"/>
				<xs:element ref="FaxCountry" minOccurs="0"/>
				<xs:element ref="FaxArea" minOccurs="0"/>
				<xs:element ref="FaxExt" minOccurs="0"/>
				<xs:element ref="EMail" minOccurs="0"/>
				<xs:element ref="CreditCard"  minOccurs="0"/>
				<xs:element ref="BonusCard" minOccurs="0"/>
				<xs:element ref="DateOfBirth" minOccurs="0"/>
				<xs:element ref="DocChannel" minOccurs="0"/>
			</xs:all>
		</xs:complexType>
	</xs:element>
	<xs:element name="CustomerNo" type="xs:string">
		<xs:annotation>
			<xs:documentation>The number of the customer</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="CustomerType">
		<xs:annotation>
			<xs:documentation>Agency = 1, Cooperation = 2, Customgroup = 3, Private = 4</xs:documentation>
		</xs:annotation>
		<xs:simpleType>
			<xs:restriction base="xs:short">
				<xs:enumeration value="4"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	<xs:element name="DateOfBirth">
		<xs:annotation>
			<xs:documentation>The date of birth</xs:documentation>
		</xs:annotation>
		<xs:simpleType>
			<xs:restriction base="xs:date">
				<xs:pattern value="\d{4}-\d{2}-\d{2}"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	<xs:element name="DemandedObject" type="xs:short">
		<xs:annotation>
			<xs:documentation>19999 - booking, 10057 - amend booking , 10056 - verify amend booking
			For 10057, 10056 the BookingId must be provided </xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="DemandedObjects">
		<xs:annotation>
			<xs:documentation>Contains a DemandedObject</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="DemandedObject"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="Dim1" type="xs:string">
		<xs:annotation>
			<xs:documentation>A dimension id</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="Dim2" type="xs:string">
		<xs:annotation>
			<xs:documentation>A dimension id</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="DoBDriver">
		<xs:annotation>
			<xs:documentation>The drivers date of birth</xs:documentation>
		</xs:annotation>
		<xs:simpleType>
			<xs:restriction base="xs:date">
				<xs:pattern value="\d{4}-\d{2}-\d{2}"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	<xs:element name="DoBAddDriver">
		<xs:annotation>
			<xs:documentation>The second drivers date of birth</xs:documentation>
		</xs:annotation>
		<xs:simpleType>
			<xs:restriction base="xs:date">
				<xs:pattern value="\d{4}-\d{2}-\d{2}"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	<xs:element name="DocChannel">
		<xs:annotation>
			<xs:documentation>Must be 1</xs:documentation>
		</xs:annotation>
		<xs:simpleType>
			<xs:restriction base="xs:string">
				<xs:enumeration value="1"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	<xs:element name="DriverFirstName" type="xs:string">
		<xs:annotation>
			<xs:documentation>The drivers first name</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="DriverName" type="xs:string">
		<xs:annotation>
			<xs:documentation>The drivers name</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="AdditionalDriver" type="xs:string">
		<xs:annotation>
			<xs:documentation>The second drivers name</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="DropOffStationId" type="xs:long">
		<xs:annotation>
			<xs:documentation>A drop off station id</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="DropOffSupplierId" type="xs:long">
		<xs:annotation>
			<xs:documentation>A drop off supplier id</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="DropOffTime">
		<xs:annotation>
			<xs:documentation>a drop off time</xs:documentation>
		</xs:annotation>
		<xs:simpleType>
			<xs:restriction base="xs:string">
				<xs:pattern value="\d{2}:\d{2}"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	<xs:element name="EMail" type="xs:string">
		<xs:annotation>
			<xs:documentation>An email address</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="Extra">
		<xs:annotation>
			<xs:documentation>Contains extra related data</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:all>
				<xs:element ref="Id" minOccurs="0"/>
				<xs:element ref="Code"/>
				<xs:element ref="Name" minOccurs="0"/>
				<xs:element ref="Amount" minOccurs="0"/>
				<xs:element ref="Dim1" minOccurs="0"/>
				<xs:element ref="Dim2" minOccurs="0"/>
				<xs:element ref="LowerPrice" minOccurs="0"/>
				<xs:element ref="UpperPrice" minOccurs="0"/>
				<xs:element ref="Currency" minOccurs="0"/>
				<xs:element ref="Status" minOccurs="0"/>
				<xs:element ref="CurrencyId" minOccurs="0"/>
				<xs:element ref="Info" minOccurs="0"/>
			</xs:all>
		</xs:complexType>
	</xs:element>
	<xs:element name="Extras">
		<xs:annotation>
			<xs:documentation>Contains Extra objects</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="Extra" maxOccurs="unbounded"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="FaxArea" type="xs:string">
		<xs:annotation>
			<xs:documentation>The fax area code</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="FaxCountry" type="xs:string">
		<xs:annotation>
			<xs:documentation>The fax country code</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="FaxExt" type="xs:string">
		<xs:annotation>
			<xs:documentation>The fax extension</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="FirstName" type="xs:string">
		<xs:annotation>
			<xs:documentation>A first name</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="Flag">
		<xs:annotation>
			<xs:documentation>A flag. Can be 1 = true or 0 = false</xs:documentation>
		</xs:annotation>
		<xs:simpleType>
			<xs:restriction base="xs:string">
				<xs:enumeration value="0"/>
				<xs:enumeration value="1"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	<xs:element name="PickUpDate">
		<xs:annotation>
			<xs:documentation>The pick up date</xs:documentation>
		</xs:annotation>
		<xs:simpleType>
			<xs:restriction base="xs:string">
				<xs:pattern value="\d{4}-\d{2}-\d{2}"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	<xs:element name="GroupName" type="xs:string">
		<xs:annotation>
			<xs:documentation>A group name</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="GroupId" type="xs:long">
		<xs:annotation>
			<xs:documentation>A group Id</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="Holder" type="xs:string">
		<xs:annotation>
			<xs:documentation>The credit card holder</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="Id" type="xs:long">
		<xs:annotation>
			<xs:documentation>An id</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="Info" type="xs:string">
		<xs:annotation>
			<xs:documentation>An info text</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="Insurance">
		<xs:annotation>
			<xs:documentation>Contains insurance related data</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:all>
				<xs:element ref="Price" minOccurs="0"/>
				<xs:element ref="Id"/>
				<xs:element ref="Flag"/>
			</xs:all>
		</xs:complexType>
	</xs:element>
	<xs:element name="LanguageId">
		<xs:annotation>
			<xs:documentation>The desired language in ISO-639</xs:documentation>
		</xs:annotation>
		<xs:simpleType>
			<xs:restriction base="xs:string">
				<xs:pattern value="\w{2}"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	<xs:element name="LogIn" type="xs:string">
		<xs:annotation>
			<xs:documentation>A login</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="LowerPrice">
		<xs:annotation>
			<xs:documentation>A lower price</xs:documentation>
		</xs:annotation>
		<xs:simpleType>
			<xs:restriction base="xs:string">
				<xs:pattern value="\d{1,},\d{2}"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	<xs:element name="Name" type="xs:string">
		<xs:annotation>
			<xs:documentation>A name</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="Number" type="xs:string">
		<xs:annotation>
			<xs:documentation>A number</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="OperatorId" type="xs:long">
		<xs:annotation>
			<xs:documentation>The operator id</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="HotelCity" type="xs:string">
		<xs:annotation>
			<xs:documentation>The pickup city</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="HotelName" type="xs:string">
		<xs:annotation>
			<xs:documentation>The pick up name</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="HotelStreet" type="xs:string">
		<xs:annotation>
			<xs:documentation>The pick up street</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="DropOffHotelCity" type="xs:string">
		<xs:annotation>
			<xs:documentation>The drop off city</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="DropOffHotelName" type="xs:string">
		<xs:annotation>
			<xs:documentation>Thedrop off name</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="DropOffHotelStreet" type="xs:string">
		<xs:annotation>
			<xs:documentation>The drop off street</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="PartnerNo" type="xs:string">
		<xs:annotation>
			<xs:documentation>A partner number</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="Password" type="xs:string">
		<xs:annotation>
			<xs:documentation>A password</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="PhoneArea" type="xs:string">
		<xs:annotation>
			<xs:documentation>A phone area code</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="PhoneCountry" type="xs:string">
		<xs:annotation>
			<xs:documentation>A phone country code</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="PhoneExt" type="xs:string">
		<xs:annotation>
			<xs:documentation>A phone extension</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="FlightNo" type="xs:string">
		<xs:annotation>
			<xs:documentation>The flight number</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="PickUpStationId" type="xs:long">
		<xs:annotation>
			<xs:documentation>A pick up station id</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="PickUpTime">
		<xs:annotation>
			<xs:documentation>A pick up time</xs:documentation>
		</xs:annotation>
		<xs:simpleType>
			<xs:restriction base="xs:string">
				<xs:pattern value="\d{2}:\d{2}"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	<xs:element name="PickUpType">
		<xs:annotation>
			<xs:documentation>A pick up type. 1 = walk in, 2 = airport, 3 = hotel</xs:documentation>
		</xs:annotation>
		<xs:simpleType>
			<xs:restriction base="xs:short">
				<xs:enumeration value="1"/>
				<xs:enumeration value="2"/>
				<xs:enumeration value="3"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	<xs:element name="Price">
		<xs:annotation>
			<xs:documentation>A price</xs:documentation>
		</xs:annotation>
		<xs:simpleType>
			<xs:restriction base="xs:string">
				<xs:pattern value="\d{1,},\d{2}"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	<xs:element name="Producer" type="xs:string">
		<xs:annotation>
			<xs:documentation>A producer</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="PromoCode" type="xs:string">
		<xs:annotation>
			<xs:documentation>A promo code</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="RateQualifier" type="xs:string">
		<xs:annotation>
			<xs:documentation>A sell reference from External Supplier</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="ServCatId" type="xs:long">
		<xs:annotation>
			<xs:documentation>A service catalog id</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="Status">
		<xs:annotation>
			<xs:documentation>A status. 0 = on request, 13 = available</xs:documentation>
		</xs:annotation>
		<xs:simpleType>
			<xs:restriction base="xs:string">
				<xs:enumeration value="0"/>
				<xs:enumeration value="13"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	<xs:element name="Street" type="xs:string">
		<xs:annotation>
			<xs:documentation>A street including the house number</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="PickUpSupplierId" type="xs:long">
		<xs:annotation>
			<xs:documentation>A supplier id</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="DropOffDate">
		<xs:annotation>
			<xs:documentation>The drop off date</xs:documentation>
		</xs:annotation>
		<xs:simpleType>
			<xs:restriction base="xs:string">
				<xs:pattern value="\d{4}-\d{2}-\d{2}"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	<xs:element name="TotalPrice">
		<xs:annotation>
			<xs:documentation>The total price</xs:documentation>
		</xs:annotation>
		<xs:simpleType>
			<xs:restriction base="xs:string">
				<xs:pattern value="\d{1,},\d{2}"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	<xs:element name="Travel">
		<xs:annotation>
			<xs:documentation>Contains travel related data</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:all>
				<xs:element ref="BookingId" minOccurs="0"/>
				<xs:element ref="PromoCode"/>
				<xs:element ref="Status"/>
				<xs:element ref="PickUpDate"/>
				<xs:element ref="DropOffDate"/>
				<xs:element ref="PickUpTime"/>
				<xs:element ref="DropOffTime"/>
				<xs:element ref="PickUpType"/>
				<xs:element ref="FlightNo" minOccurs="0"/>
				<xs:element ref="HotelName" minOccurs="0"/>
				<xs:element ref="HotelStreet" minOccurs="0"/>
				<xs:element ref="HotelCity" minOccurs="0"/>
				<xs:element ref="ServCatId"/>
				<xs:element ref="CountryId" minOccurs="0"/>
				<xs:element ref="CityId" minOccurs="0"/>
				<xs:element ref="PickUpStationId"/>
				<xs:element ref="DropOffStationId"/>
				<xs:element ref="PickUpSupplierId"/>
				<xs:element ref="DropOffSupplierId"/>
				<xs:element ref="DriverTitle" minOccurs="0"/>
				<xs:element ref="DriverSalutation" minOccurs="0"/>
				<xs:element ref="DriverName"/>
				<xs:element ref="DriverFirstName"/>
				<xs:element ref="DoBDriver" minOccurs="0"/>
				<xs:element ref="TotalPrice" minOccurs="0"/>
				<xs:element ref="RateQualifier" minOccurs="0"/>
				<xs:element ref="AdditionalDriver" minOccurs="0"/>
				<xs:element ref="DoBAddDriver" minOccurs="0"/>
			</xs:all>
		</xs:complexType>
	</xs:element>
	<xs:element name="DriverTitle">
		<xs:annotation>
			<xs:documentation>A title id. 1 = dr, 2 = prof, 3 = prof dr</xs:documentation>
		</xs:annotation>
		<xs:simpleType>
			<xs:restriction base="xs:string">
				<xs:enumeration value=""/>
				<xs:enumeration value="1"/>
				<xs:enumeration value="2"/>
				<xs:enumeration value="3"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	<xs:element name="OutputConfiguration">
		<xs:annotation>
			<xs:documentation>Configuration for output format</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="ErrorFormat" minOccurs="0"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="ErrorFormat">
		<xs:annotation>
			<xs:documentation>A format for error in the response</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:simpleContent>
				<xs:extension base="xs:string">
					<xs:attribute name="multiple" type="xs:boolean">
						<xs:annotation>
							<xs:documentation>return multiple or singular error format</xs:documentation>
						</xs:annotation>
					</xs:attribute>
				</xs:extension>
			</xs:simpleContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="DriverSalutation">
		<xs:annotation>
			<xs:documentation>A salutation id. 1 = female, 2 = male, 3=other(e.g. MISS) or empty</xs:documentation>
		</xs:annotation>
		<xs:simpleType>
			<xs:restriction base="xs:string">
				<xs:pattern value="/d+"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	<xs:element name="Type" type="xs:string">
		<xs:annotation>
			<xs:documentation>A type</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="UpperPrice">
		<xs:annotation>
			<xs:documentation>An upper price</xs:documentation>
		</xs:annotation>
		<xs:simpleType>
			<xs:restriction base="xs:string">
				<xs:pattern value="\d{1,},\d{2}"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	<xs:element name="UserType">
		<xs:annotation>
			<xs:documentation>T = test, P = productive</xs:documentation>
		</xs:annotation>
		<xs:simpleType>
			<xs:restriction base="xs:string">
				<xs:enumeration value="T"/>
				<xs:enumeration value="P"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	<xs:element name="ValidUntil">
		<xs:annotation>
			<xs:documentation>An expiration date</xs:documentation>
		</xs:annotation>
		<xs:simpleType>
			<xs:restriction base="xs:string">
				<xs:pattern value="\d{4}-\d{2}-\d{2}"/>
			</xs:restriction>
		</xs:simpleType>
	</xs:element>
	<xs:element name="ZipCode" type="xs:string">
		<xs:annotation>
			<xs:documentation>A zip code</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="BrokerSubExtRef" type="xs:string">
		<xs:annotation>
			<xs:documentation>Reference Booking Id from Broker system</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="BookingId" type="xs:string">
		<xs:annotation>
			<xs:documentation>The booking id</xs:documentation>
		</xs:annotation>
	</xs:element>
</xs:schema>